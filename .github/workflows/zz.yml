name: zz-MASTER
on:
  # allows to run this workflow manually from the actions tab
  workflow_dispatch:
    inputs:
      group:
        description: 'Should the workflow clean the /build-root'
        default: bah
        required: true
        type: string

env:
  TZ: Australia/Melbourne
  # these ENV variables are not used yet - need to get this working with the with statements below
  clean_le: ${{ inputs.group }}${{ github.event.inputs.group }}
  debug: debug
  ephemeral: ephemeral
  upload: upload
      
jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
          fetch-depth: 2
          repository: "LibreELEC/LibreELEC.tv"
          path: "LibreELEC.tv"
      - name: print latest_commit of checked out LibreELEC.tv/LibreELEC.tv
        run: |
          cd LibreELEC.tv
          echo $(git rev-parse HEAD)
      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        run: |
          cd LibreELEC.tv
          test -z $(git rev-list  --after="24 hours" $(git rev-parse HEAD)) && echo "::set-output name=should_run::false"
        
  # Allwinner
  libreelec-A64_arm:
    runs-on: ubuntu-latest
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    steps:
      - name: as2
        run: |
          echo "hello"
          echo "bah ${{ env.clean_le }}"
          echo "rudi: ${{ needs.check_date.outputs.should_run }}"
  libreelec-H3_arm:
    runs-on: ubuntu-latest
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    steps:
      - name: as
        run: |
          echo "hello2"
          echo "rudi: ${{ needs.check_date.outputs.should_run }}"
  libreelec-H3_arm1:
    runs-on: ubuntu-latest
    # Only run if there has been a commit in the last 24 hours
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run == 'false' }}
    steps:
      - name: as
        run: |
          echo "hello2"
          echo "rudi: ${{ needs.check_date.outputs.should_run }}"
